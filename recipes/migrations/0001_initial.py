# Generated by Django 5.2 on 2025-04-24 12:21

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DietType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Название"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=20, unique=True, verbose_name="Слаг"),
                ),
            ],
            options={
                "verbose_name": "Тип диеты",
                "verbose_name_plural": "Типы диет",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Пример: Помидор",
                        max_length=50,
                        verbose_name="Название",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингредиент",
                "verbose_name_plural": "Ингредиенты",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Пример: Спагетти Карбонара",
                        max_length=100,
                        verbose_name="Название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Пример: Нежное куриное филе в сливочном соусе с травами.",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="media/", verbose_name="Фото блюда"
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Стоимость в рублях с копейками",
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Общая стоимость",
                    ),
                ),
                (
                    "cooking_time",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Время приготовления (минут)",
                    ),
                ),
                (
                    "cooking_steps",
                    models.TextField(
                        help_text="Пример: 1. Нарежьте овощи... 2. Обжарьте мясо...",
                        verbose_name="Шаги приготовления",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Снимите галочку, чтобы временно скрыть рецепт из выдачи.",
                        verbose_name="Доступно для выбора",
                    ),
                ),
                (
                    "diet_types",
                    models.ManyToManyField(
                        related_name="recipes",
                        to="recipes.diettype",
                        verbose_name="Типы питания",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        to="recipes.ingredient", verbose_name="Ингредиенты"
                    ),
                ),
            ],
            options={
                "verbose_name": "Рецепт",
                "verbose_name_plural": "Рецепты",
                "ordering": ["-id"],
            },
        ),
    ]
